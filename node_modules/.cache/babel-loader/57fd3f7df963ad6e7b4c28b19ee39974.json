{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\emre\\\\Desktop\\\\Cv projeleri\\\\employeemanagement\\\\src\\\\components\\\\EditForm.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Button } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState } from 'react';\n\nconst EditForm = ({\n  theEmployee\n}) => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(EmployeeContext);\n  const employee = theEmployee;\n  const id = employee.id;\n  const [name, SetName] = useState(employee.name);\n  const [email, SetEmail] = useState(employee.email);\n  const [address, SetAddress] = useState(employee.address);\n  const [phone, SetPhone] = useState(employee.phone);\n  const updatedEmployee = {\n    id,\n    name,\n    email,\n    address,\n    phone\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //updateEmployee(id, updatedEmployee);\n\n    dispatch({\n      type: 'update_employee',\n      id,\n      updatedEmployee\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Name *\",\n        name: \"name\",\n        value: name,\n        onChange: e => SetName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Email *\",\n        name: \"email\",\n        value: email,\n        onChange: e => SetEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        placeholder: \"Address *\",\n        name: \"address\",\n        rows: 3,\n        value: address,\n        onChange: e => SetAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        value: phone,\n        onChange: e => SetPhone(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      block: true,\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditForm, \"mfXE1KeEb/bLbAjdIaqKESobrCE=\");\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["C:/Users/emre/Desktop/Cv projeleri/employeemanagement/src/components/EditForm.js"],"names":["Form","Button","EmployeeContext","useContext","useState","EditForm","theEmployee","dispatch","employee","id","name","SetName","email","SetEmail","address","SetAddress","phone","SetPhone","updatedEmployee","handleSubmit","e","preventDefault","type","target","value"],"mappings":"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","sourcesContent":["import { Form, Button } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport { useContext, useState} from 'react';\n\nconst EditForm = ({theEmployee}) => {\n\n    const { dispatch } = useContext(EmployeeContext);\n\n    const employee = theEmployee;\n    const id = employee.id;\n\n    const [name, SetName] = useState(employee.name);\n    const [email, SetEmail] = useState(employee.email);\n    const [address, SetAddress] = useState(employee.address);\n    const [phone, SetPhone] = useState(employee.phone);\n\n    const updatedEmployee = {id, name, email, address, phone};\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        //updateEmployee(id, updatedEmployee);\n        dispatch({type:'update_employee', id, updatedEmployee})\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e)=>SetName(e.target.value)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e)=>SetEmail(e.target.value)}\n                    required \n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address *\"\n                    name=\"address\"\n                    rows={3} \n                    value={address}\n                    onChange={(e)=>SetAddress(e.target.value)}\n                />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={(e)=>SetPhone(e.target.value)}\n                />\n            </Form.Group>\n\n            <Button variant=\"success\" type=\"submit\" block>\n                Update Employee\n            </Button>\n        </Form>\n    )\n}\n\nexport default EditForm;"]},"metadata":{},"sourceType":"module"}