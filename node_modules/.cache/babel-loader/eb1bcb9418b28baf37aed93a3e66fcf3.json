{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\emre\\\\Desktop\\\\Cv projeleri\\\\employeemanagement\\\\src\\\\components\\\\EmployeeList.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from 'react';\nimport Employee from './Employee';\nimport { Button, Modal, Alert } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\n\nconst EmployeeList = () => {\n  _s();\n\n  const {\n    sortedEmployees\n  } = useContext(EmployeeContext);\n  const [showAlert, setShowAlert] = useState(false);\n  const [show, setShow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [employeesPerPage] = useState(5);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true); //const handleShowAlert = () => setShowAlert(true);\n\n\n  const handleShowAlert = () => {\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 2000);\n  };\n\n  useEffect(() => {\n    handleClose();\n    return () => {\n      handleShowAlert();\n    };\n  }, [sortedEmployees]);\n  const indexOfLastEmployee = currentPage * employeesPerPage;\n  const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n  const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n  const totalPagesNum = Math.ceil(sortedEmployees.length / employeesPerPage);\n  /*     const reducer = (state, action) => {\n          switch(action.type) {\n              case 'increment':\n                  return {count: state.count + 1 }\n              \n              case 'decrement':\n                  return {count: state.count - 1 }\n  \n              default:\n                  throw new Error();\n          }\n      } */\n\n  /*     const initialState ={ count: 0};\n      const [state, dispatch] = useReducer(reducer, initialState) */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-title\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Manage \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Employees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleShow,\n            className: \"btn btn-success text-white\",\n            \"data-toggle\": \"modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"\\uE147\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 101\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add New Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 144\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      show: showAlert,\n      variant: \"success\",\n      children: \"Employee List successfully updated!.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentEmployees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(Employee, {\n            employee: employee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, employee.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      pages: totalPagesNum,\n      setCurrentPage: setCurrentPage,\n      currentEmployees: currentEmployees,\n      sortedEmployees: sortedEmployees\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        className: \"modal-header\",\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(AddForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EmployeeList, \"tC87cGWOHPhQRHUnyawPKnYHZ68=\");\n\n_c = EmployeeList;\nexport default EmployeeList; // .sort((a,b) => a.name.localeCompare(b.name))\n// sort((a,b) => (a.name < b.name ? -1 : 1 ))\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"sources":["C:/Users/emre/Desktop/Cv projeleri/employeemanagement/src/components/EmployeeList.js"],"names":["useContext","useEffect","useState","Employee","Button","Modal","Alert","EmployeeContext","AddForm","Pagination","EmployeeList","sortedEmployees","showAlert","setShowAlert","show","setShow","currentPage","setCurrentPage","employeesPerPage","handleClose","handleShow","handleShowAlert","setTimeout","indexOfLastEmployee","indexOfFirstEmployee","currentEmployees","slice","totalPagesNum","Math","ceil","length","map","employee","id"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,QAAqC,iBAArC;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAEvB,QAAM;AAACC,IAAAA;AAAD,MAAoBX,UAAU,CAACO,eAAD,CAApC;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,gBAAD,IAAqBhB,QAAQ,CAAC,CAAD,CAAnC;;AAEA,QAAMiB,WAAW,GAAG,MAAMJ,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMK,UAAU,GAAG,MAAML,OAAO,CAAC,IAAD,CAAhC,CAVuB,CAWvB;;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC1BR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAS,IAAAA,UAAU,CAAC,MAAK;AACZT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GALD;;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,WAAW;AAEX,WAAO,MAAM;AACTE,MAAAA,eAAe;AAClB,KAFD;AAGH,GANQ,EAMN,CAACV,eAAD,CANM,CAAT;AAQA,QAAMY,mBAAmB,GAAGP,WAAW,GAAGE,gBAA1C;AACA,QAAMM,oBAAoB,GAAGD,mBAAmB,GAAGL,gBAAnD;AACA,QAAMO,gBAAgB,GAAGd,eAAe,CAACe,KAAhB,CAAsBF,oBAAtB,EAA4CD,mBAA5C,CAAzB;AACA,QAAMI,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUlB,eAAe,CAACmB,MAAhB,GAAwBZ,gBAAlC,CAAtB;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGI,sBAEI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE;AAAA,+CAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEE,UAAjB;AAA6B,YAAA,SAAS,EAAC,4BAAvC;AAAoE,2BAAY,OAAhF;AAAA,oCAAwF;AAAG,cAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAxF,oBAAmI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eAYF,QAAC,KAAD;AAAO,MAAA,IAAI,EAAER,SAAb;AAAwB,MAAA,OAAO,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZE,eAgBA;AAAO,MAAA,SAAS,EAAC,iCAAjB;AAAA,8BACI;AAAA,+BACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,kBAEQa,gBAAgB,CAACM,GAAjB,CAAsBC,QAAD,iBACjB;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBA,eAqCA,QAAC,UAAD;AACI,MAAA,KAAK,EAAIN,aADb;AAEI,MAAA,cAAc,EAAOV,cAFzB;AAGI,MAAA,gBAAgB,EAAIQ,gBAHxB;AAII,MAAA,eAAe,EAAId;AAJvB;AAAA;AAAA;AAAA;AAAA,YArCA,eAgDA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEG,IAAb;AAAmB,MAAA,MAAM,EAAEK,WAA3B;AAAA,8BACI,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,SAAS,EAAC,cAAxB;AAAuC,QAAA,WAAW,MAAlD;AAAA,+BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,KAAD,CAAO,IAAP;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,KAAD,CAAO,MAAP;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEA,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhDA;AAAA,kBAFJ;AAqEH,CAxHD;;GAAMT,Y;;KAAAA,Y;AA0HN,eAAeA,YAAf,C,CAEA;AAEA","sourcesContent":["import { useContext, useEffect, useState} from 'react';\nimport Employee from './Employee';\nimport { Button, Modal, Alert } from 'react-bootstrap';\nimport { EmployeeContext } from '../contexts/EmployeeContext';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\n\nconst EmployeeList = () => {\n\n    const {sortedEmployees} = useContext(EmployeeContext)\n\n    const [showAlert, setShowAlert] = useState(false);\n    const [show, setShow] = useState(false)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [employeesPerPage] = useState(5)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true)\n    //const handleShowAlert = () => setShowAlert(true);\n\n    const handleShowAlert = () => {\n        setShowAlert(true);\n        setTimeout(()=> {\n            setShowAlert(false);\n        }, 2000);\n    };\n\n    useEffect(() => {\n        handleClose();\n\n        return () => {\n            handleShowAlert();\n        }\n    }, [sortedEmployees])\n\n    const indexOfLastEmployee = currentPage * employeesPerPage;\n    const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n    const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n    const totalPagesNum = Math.ceil(sortedEmployees.length /employeesPerPage)\n\n\n/*     const reducer = (state, action) => {\n        switch(action.type) {\n            case 'increment':\n                return {count: state.count + 1 }\n            \n            case 'decrement':\n                return {count: state.count - 1 }\n\n            default:\n                throw new Error();\n        }\n    } */\n\n/*     const initialState ={ count: 0};\n    const [state, dispatch] = useReducer(reducer, initialState) */\n\n\n    return (\n\n        <>\n        <div className=\"table-title\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <h2>Manage <b>Employees</b></h2>\n          </div>\n          <div className=\"col-sm-6\">\n            <Button onClick={handleShow} className=\"btn btn-success text-white\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE147;</i> <span>Add New Employee</span></Button>\n          </div>\n        </div>\n      </div>\n\n      <Alert show={showAlert} variant=\"success\">\n        Employee List successfully updated!.\n      </Alert>\n\n        <table className=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Address</th>\n                    <th>Phone</th>\n                    <th>Actions</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                    currentEmployees.map((employee) =>(\n                        <tr key={employee.id}>\n                            <Employee employee={employee} />\n                        </tr>\n                    ))\n                }\n            </tbody>\n        </table>\n\n        <Pagination \n            pages = {totalPagesNum} \n            setCurrentPage  =   {setCurrentPage}\n            currentEmployees = {currentEmployees} \n            sortedEmployees = {sortedEmployees}\n            />\n\n{/*         Count : {state.count}\n        <button onClick= {()=> dispatch({type: 'increment'})}>+</button>\n        <button onClick= {()=> dispatch({type: 'decrement'})}>-</button> */}\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header className=\"modal-header\" closeButton>\n                <Modal.Title>\n                    Add Employee\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <AddForm />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close Modal\n                </Button>\n            </Modal.Footer>\n        </Modal>\n\n        \n        </>\n    )\n}\n\nexport default EmployeeList;\n\n// .sort((a,b) => a.name.localeCompare(b.name))\n\n// sort((a,b) => (a.name < b.name ? -1 : 1 ))"]},"metadata":{},"sourceType":"module"}