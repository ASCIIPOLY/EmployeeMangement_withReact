{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\emre\\\\Desktop\\\\Cv projeleri\\\\employeemanagement\\\\src\\\\contexts\\\\EmployeeContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nexport const EmployeeContext = /*#__PURE__*/createContext();\n\nconst EmployeeContextProvider = props => {\n  _s();\n\n  /*     const [employees, setEmployees] = useState([\n          {id:uuidv4(), name: 'Thomas Hardy', email: 'thomashardy@mail.com', address: '89 Chiaroscuro Rd, Portland, USA', phone: '(171) 555-2222'},\n          {id:uuidv4(), name: 'Dominique Perrier', email: 'dominiqueperrier@mail.com', address: 'Obere Str. 57, Berlin, Germany', phone: '(313) 555-5735'},\n          {id:uuidv4(), name: 'Maria Anders', email: 'mariaanders@mail.com', address: '25, rue Lauriston, Paris, France', phone: '(503) 555-9931'},\n          {id:uuidv4(), name: 'Fran Wilson', email: 'franwilson@mail.com', address: 'C/ Araquil, 67, Madrid, Spain', phone: '(204) 619-5731'},\n          {id:uuidv4(), name: 'Martin Blank', email: 'martinblank@mail.com', address: 'Via Monte Bianco 34, Turin, Italy', phone: '(480) 631-2097'}\n  ]) */\n  const reducer = (employees, action) => {\n    switch (action.type) {\n      case 'add_employee':\n        return [...employees, {\n          id: uuidv4(),\n          name: action.employee.name,\n          email: action.employee.email,\n          address: action.employee.address,\n          phone: action.employee.phone\n        }];\n\n      case 'remove_employee':\n        return employees.filter(employee => employee.id !== action.id);\n\n      case 'update_employee':\n        return employees.map(employee => employee.id === action.id ? action.updatedEmployee : employee);\n\n      default:\n        return employees;\n    }\n  };\n\n  const [employees, dispatch] = useReducer(reducer, [], () => {\n    const employees = localStorage.getItem('employees');\n    return employees ? JSON.parse(employees) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('employees', JSON.stringify(employees));\n  }); //const sortedEmployees = employees.sort((a,b) => (a.name < b.name ? -1 : 1 ));\n\n  const sortedEmployees = employees.sort((a, b) => a.name < b.name ? -1 : 1);\n  /*     const addEmployee = (name, email, address, phone) => {\n          setEmployees([...employees, {id:uuidv4(), name, email, address, phone}])\n      } */\n\n  /*     const deleteEmployee = (id) => {\n          setEmployees(employees.filter(employee => employee.id !==id))\n      } */\n\n  /*     const updateEmployee = (id, updatedEmployee) => {\n          setEmployees(employees.map((employee) => (employee.id === id ? updatedEmployee : employee)))\n      } */\n\n  return /*#__PURE__*/_jsxDEV(EmployeeContext.Provider, {\n    value: {\n      sortedEmployees,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EmployeeContextProvider, \"nantOL+HEl1cnYjH2U2sgUzFZTs=\");\n\n_c = EmployeeContextProvider;\nexport default EmployeeContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeContextProvider\");","map":{"version":3,"sources":["C:/Users/emre/Desktop/Cv projeleri/employeemanagement/src/contexts/EmployeeContext.js"],"names":["createContext","useEffect","useReducer","v4","uuidv4","EmployeeContext","EmployeeContextProvider","props","reducer","employees","action","type","id","name","employee","email","address","phone","filter","map","updatedEmployee","dispatch","localStorage","getItem","JSON","parse","setItem","stringify","sortedEmployees","sort","a","b","children"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAoD,OAApD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,eAAe,gBAAGL,aAAa,EAArC;;AAEP,MAAMM,uBAAuB,GAAIC,KAAD,IAAW;AAAA;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,QAAMC,OAAO,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAAuB;AACnC,YAAOA,MAAM,CAACC,IAAd;AACI,WAAK,cAAL;AACI,eAAO,CAAC,GAAGF,SAAJ,EAAe;AAClBG,UAAAA,EAAE,EAAER,MAAM,EADQ;AAElBS,UAAAA,IAAI,EAAEH,MAAM,CAACI,QAAP,CAAgBD,IAFJ;AAGlBE,UAAAA,KAAK,EAAEL,MAAM,CAACI,QAAP,CAAgBC,KAHL;AAIlBC,UAAAA,OAAO,EAAEN,MAAM,CAACI,QAAP,CAAgBE,OAJP;AAKlBC,UAAAA,KAAK,EAAEP,MAAM,CAACI,QAAP,CAAgBG;AALL,SAAf,CAAP;;AAQJ,WAAK,iBAAL;AACI,eAAOR,SAAS,CAACS,MAAV,CAAiBJ,QAAQ,IAAIA,QAAQ,CAACF,EAAT,KAAgBF,MAAM,CAACE,EAApD,CAAP;;AAEJ,WAAK,iBAAL;AACI,eAAOH,SAAS,CAACU,GAAV,CAAeL,QAAD,IAAeA,QAAQ,CAACF,EAAT,KAAgBF,MAAM,CAACE,EAAvB,GAA4BF,MAAM,CAACU,eAAnC,GAAqDN,QAAlF,CAAP;;AAEJ;AACI,eAAOL,SAAP;AAjBR;AAmBH,GApBD;;AAsBD,QAAK,CAACA,SAAD,EAAYY,QAAZ,IAAwBnB,UAAU,CAACM,OAAD,EAAU,EAAV,EAEtC,MAAM;AACF,UAAMC,SAAS,GAAGa,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACA,WAAOd,SAAS,GAAGe,IAAI,CAACC,KAAL,CAAWhB,SAAX,CAAH,GAA2B,EAA3C;AACH,GALqC,CAAvC;AAQCR,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,YAAY,CAACI,OAAb,CAAqB,WAArB,EAAkCF,IAAI,CAACG,SAAL,CAAelB,SAAf,CAAlC;AACH,GAFQ,CAAT,CAzCuC,CA6CvC;;AACA,QAAMmB,eAAe,GAAGnB,SAAS,CAACoB,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAAUD,CAAC,CAACjB,IAAF,GAASkB,CAAC,CAAClB,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAhD,CAAxB;AAEJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEI,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAACe,MAAAA,eAAD;AAAkBP,MAAAA;AAAlB,KAAjC;AAAA,cACKd,KAAK,CAACyB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjED;;GAAM1B,uB;;KAAAA,uB;AAmEN,eAAeA,uBAAf","sourcesContent":["import { createContext, useEffect, useReducer} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const EmployeeContext = createContext();\n\nconst EmployeeContextProvider = (props) => {\n\n/*     const [employees, setEmployees] = useState([\n        {id:uuidv4(), name: 'Thomas Hardy', email: 'thomashardy@mail.com', address: '89 Chiaroscuro Rd, Portland, USA', phone: '(171) 555-2222'},\n        {id:uuidv4(), name: 'Dominique Perrier', email: 'dominiqueperrier@mail.com', address: 'Obere Str. 57, Berlin, Germany', phone: '(313) 555-5735'},\n        {id:uuidv4(), name: 'Maria Anders', email: 'mariaanders@mail.com', address: '25, rue Lauriston, Paris, France', phone: '(503) 555-9931'},\n        {id:uuidv4(), name: 'Fran Wilson', email: 'franwilson@mail.com', address: 'C/ Araquil, 67, Madrid, Spain', phone: '(204) 619-5731'},\n        {id:uuidv4(), name: 'Martin Blank', email: 'martinblank@mail.com', address: 'Via Monte Bianco 34, Turin, Italy', phone: '(480) 631-2097'}\n]) */\n\n\n    const reducer = (employees, action) => {\n        switch(action.type) {\n            case 'add_employee':\n                return [...employees, {\n                    id: uuidv4(),\n                    name: action.employee.name, \n                    email: action.employee.email,\n                    address: action.employee.address,\n                    phone: action.employee.phone,\n                }]\n\n            case 'remove_employee':\n                return employees.filter(employee => employee.id !== action.id)\n\n            case 'update_employee':\n                return employees.map((employee) => (employee.id === action.id ? action.updatedEmployee : employee))\n\n            default:\n                return employees;\n        }\n    }\n\n   const[employees, dispatch] = useReducer(reducer, [],\n    \n    () => {\n        const employees = localStorage.getItem('employees')\n        return employees ? JSON.parse(employees) : [];\n    }\n)\n\n    useEffect(() => {\n        localStorage.setItem('employees', JSON.stringify(employees))\n    })\n\n    //const sortedEmployees = employees.sort((a,b) => (a.name < b.name ? -1 : 1 ));\n    const sortedEmployees = employees.sort((a,b) => (a.name < b.name ? -1 : 1 ));\n\n/*     const addEmployee = (name, email, address, phone) => {\n        setEmployees([...employees, {id:uuidv4(), name, email, address, phone}])\n    } */\n\n/*     const deleteEmployee = (id) => {\n        setEmployees(employees.filter(employee => employee.id !==id))\n    } */\n\n/*     const updateEmployee = (id, updatedEmployee) => {\n        setEmployees(employees.map((employee) => (employee.id === id ? updatedEmployee : employee)))\n    } */\n\n    return (\n        <EmployeeContext.Provider value={{sortedEmployees, dispatch}}>\n            {props.children}\n        </EmployeeContext.Provider>\n    )\n}\n\nexport default EmployeeContextProvider;"]},"metadata":{},"sourceType":"module"}